name: CI/CD with Github Actions and Docker

on:
  workflow_dispatch

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Naming jar file
      run: mv ./target/*.jar ./target/app.jar

    - name: Check jar file
      run: ls ./target

    - uses: actions/upload-artifact@v4
      with:
        name: app
        path: ./target/*.jar

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/app-with-actions:latest

  deploy:
    needs: ci
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          if ! java -version 2>&1 | grep -q "17"; then
            sudo apt update
            sudo apt install -y openjdk-17-jdk
            ls /usr/lib/jvm/java-17-openjdk-amd64
            sudo sh -c 'echo JAVA_HOME=\"/usr/lib/jvm/java-17-openjdk-amd64\" >> /etc/environment'
            source /etc/environment
            echo $JAVA_HOME
          fi

          if ! docker -v > /dev/null 2>&1; then
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            echo $USER
            sudo usermod -aG docker $USER
            newgrp docker
          fi
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app-with-actions:latest
          sudo docker stop app-container || true
          sudo docker rm app-container || true
          sudo docker run -d --name app-container -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/app-with-actions:latest
          sudo docker ps -al
